{"version":3,"file":"assets/js/main.js","mappings":"mBAEA,MAAMA,EAAUC,SAASC,eAAe,YACxCC,EAAYF,SAASC,eAAe,cACpCE,EAAWH,SAASC,eAAe,aAIhCC,GACHA,EAAUE,iBAAiB,SAAS,KAClCL,EAAQM,UAAUC,IAAI,YAAW,IAMhCH,GACHA,EAASC,iBAAiB,SAAS,KACjCL,EAAQM,UAAUE,OAAO,YAAW,IAMtC,MAAMC,EAAUR,SAASS,iBAAiB,cAEpCC,EAAa,KACHV,SAASC,eAAe,YAEhCI,UAAUE,OAAO,YAAW,EAEpCC,EAAQG,SAAQC,GAAKA,EAAER,iBAAiB,QAASM,KASjDG,OAAOT,iBAAiB,UANH,KACjB,MAAMU,EAASd,SAASC,eAAe,UAEvCY,OAAOE,SAAW,GAAKD,EAAOT,UAAUC,IAAI,iBACrBQ,EAAOT,UAAUE,OAAO,gBAAgB,IAYnEM,OAAOT,iBAAiB,UANP,KACb,MAAMY,EAAkBhB,SAASC,eAAe,aAEhDY,OAAOE,SAAW,IAAMC,EAAgBX,UAAUC,IAAI,eAC9BU,EAAgBX,UAAUE,OAAO,cAAc,IAM3E,MAAMU,EAAWjB,SAASS,iBAAiB,eAkB3CI,OAAOT,iBAAiB,UAhBH,KACrB,MAAMc,EAAaL,OAAOE,QAE1BE,EAASN,SAAQQ,IACf,MAAMC,EAAgBD,EAAQE,aACxBC,EAAaH,EAAQI,UAAY,GACjCC,EAAYL,EAAQM,aAAa,MACjCC,EAAgB1B,SAAS2B,cAAc,sBAAwBH,EAAY,KAE9EN,EAAaI,GAAcJ,GAAcI,EAAaF,EACrDM,EAAcrB,UAAUC,IAAI,eAE5BoB,EAAcrB,UAAUE,OAAO,cACnC,GACD,IAKD,MAAMqB,EAAc5B,SAASC,eAAe,gBACtC4B,EAAY,aACZC,EAAY,cAGZC,EAAgBC,aAAaC,QAAQ,kBACrCC,EAAeF,aAAaC,QAAQ,iBAOtCF,IAEJ/B,SAASmC,KAAK9B,UAA4B,SAAlB0B,EAA2B,MAAQ,UAAUF,GACrED,EAAYvB,UAA2B,iBAAjB6B,EAAkC,MAAQ,UAAUJ,IAI1EF,EAAYxB,iBAAiB,SAAS,KAEtCJ,SAASmC,KAAK9B,UAAU+B,OAAOP,GAC/BD,EAAYvB,UAAU+B,OAAON,GAE7BE,aAAaK,QAAQ,iBAhBSrC,SAASmC,KAAK9B,UAAUiC,SAAST,GAAa,OAAS,SAiBrFG,aAAaK,QAAQ,gBAhBQT,EAAYvB,UAAUiC,SAASR,GAAa,eAAiB,cAgBpC,IAItD,MAAMS,EAAKC,aAAa,CACxBC,OAAQ,MACRC,SAAU,OACVC,SAAU,KACVC,MAAO,MAKPL,EAAGM,OAAO,+CAAgD,CAACJ,OAAQ,UACnEF,EAAGM,OAAO,8HAE+B,CAACJ,OAAQ,SAClDF,EAAGM,OAAO,2CAA4C,CAACC,SAAU,MAEjE9C,SAASC,eAAe,gBAAgBG,iBAAiB,UAAU,SAAS2C,GAC5EA,EAAEC,iBACF,MAAMC,EAAOF,EAAEG,OACTC,EAAO,IAAIC,SAASH,GAE1BI,MAAMJ,EAAKK,OAAQ,CACjBC,OAAQN,EAAKM,OACbpB,KAAMgB,EACNK,QAAS,CACL,OAAU,sBAEbC,MAAKC,IACFA,EAASC,IACT3D,SAASC,eAAe,mBAAmB2D,YAAc,8BACzDX,EAAKY,SAELH,EAASI,OAAOL,MAAKN,IACbY,OAAOC,OAAOb,EAAM,UACpBnD,SAASC,eAAe,mBAAmB2D,YAAcT,EAAKc,OAAOC,KAAIC,GAASA,EAAMC,UAASC,KAAK,MAEtGrE,SAASC,eAAe,mBAAmB2D,YAAc,gDAC7D,GAER,IACCU,OAAMH,IACPnE,SAASC,eAAe,mBAAmB2D,YAAc,gDAAgD,GAE3G,G","sources":["webpack://your-project/./assets/js/main.js"],"sourcesContent":["import '../css/styles.css';\r\n    /*=============== SHOW MENU ===============*/\r\nconst navMenu = document.getElementById('nav-menu'),\r\nnavToggle = document.getElementById('nav-toggle'),\r\nnavClose = document.getElementById('nav-close')\r\n\r\n/*===== MENU SHOW =====*/\r\n/* Validate if constant exists */\r\nif(navToggle){\r\nnavToggle.addEventListener('click', () =>{\r\n  navMenu.classList.add('show-menu')\r\n})\r\n}\r\n\r\n/*===== MENU HIDDEN =====*/\r\n/* Validate if constant exists */\r\nif(navClose){\r\nnavClose.addEventListener('click', () =>{\r\n  navMenu.classList.remove('show-menu')\r\n\r\n})\r\n}\r\n\r\n/*=============== REMOVE MENU MOBILE ===============*/\r\nconst navLink = document.querySelectorAll('.nav__link')\r\n\r\nconst linkAction = () =>{\r\nconst navMenu = document.getElementById('nav-menu')\r\n// When we click on each nav__link, we remove the show-menu class\r\nnavMenu.classList.remove('show-menu')\r\n}\r\nnavLink.forEach(n => n.addEventListener('click', linkAction))\r\n\r\n/*=============== SHADOW HEADER ===============*/\r\nconst shadowHeader = () => {\r\n    const header = document.getElementById('header');\r\n    // When the scroll is greater than 50 viewport height, add the shadow-header class to the header tag\r\n    window.scrollY >= 50 ? header.classList.add('shadow-header')\r\n                         : header.classList.remove('shadow-header');\r\n};\r\nwindow.addEventListener('scroll', shadowHeader);\r\n\r\n\r\n/*=============== SHOW SCROLL UP ===============*/\r\nconst scrollUp = () => {\r\n    const scrollUpElement = document.getElementById('scroll-up');\r\n    // When the scroll is higher than 350 viewport height, add the show-scroll class to the a tag with the scrollup class\r\n    window.scrollY >= 350 ? scrollUpElement.classList.add('show-scroll')\r\n                          : scrollUpElement.classList.remove('show-scroll');\r\n};\r\nwindow.addEventListener('scroll', scrollUp);\r\n\r\n\r\n/*=============== SCROLL SECTIONS ACTIVE LINK ===============*/\r\nconst sections = document.querySelectorAll('section[id]')\r\n\r\nconst scrollActive = () =>{\r\nconst scrollDown = window.scrollY\r\n\r\nsections.forEach(current =>{\r\n  const sectionHeight = current.offsetHeight,\r\n        sectionTop = current.offsetTop - 58,\r\n        sectionId = current.getAttribute('id'),\r\n        sectionsClass = document.querySelector('.nav__menu a[href*=' + sectionId + ']')\r\n\r\n  if(scrollDown > sectionTop && scrollDown <= sectionTop + sectionHeight){\r\n      sectionsClass.classList.add('active-link')\r\n  }else{\r\n      sectionsClass.classList.remove('active-link')\r\n  }\r\n})\r\n}\r\nwindow.addEventListener('scroll', scrollActive)\r\n\r\n/*=============== DARK LIGHT THEME ===============*/\r\nconst themeButton = document.getElementById('theme-button')\r\nconst darkTheme = 'dark-theme'\r\nconst iconTheme = 'ri-sun-line'\r\n\r\n// Previously selected topic (if user selected)\r\nconst selectedTheme = localStorage.getItem('selected-theme')\r\nconst selectedIcon = localStorage.getItem('selected-icon')\r\n\r\n// We obtain the current theme that the interface has by validating the dark-theme class\r\nconst getCurrentTheme = () => document.body.classList.contains(darkTheme) ? 'dark' : 'light'\r\nconst getCurrentIcon = () => themeButton.classList.contains(iconTheme) ? 'ri-moon-line' : 'ri-sun-line'\r\n\r\n// We validate if the user previously chose a topic\r\nif (selectedTheme) {\r\n// If the validation is fulfilled, we ask what the issue was to know if we activated or deactivated the dark\r\ndocument.body.classList[selectedTheme === 'dark' ? 'add' : 'remove'](darkTheme)\r\nthemeButton.classList[selectedIcon === 'ri-moon-line' ? 'add' : 'remove'](iconTheme)\r\n}\r\n\r\n// Activate / deactivate the theme manually with the button\r\nthemeButton.addEventListener('click', () => {\r\n// Add or remove the dark / icon theme\r\ndocument.body.classList.toggle(darkTheme)\r\nthemeButton.classList.toggle(iconTheme)\r\n// We save the theme and the current icon that the user chose\r\nlocalStorage.setItem('selected-theme', getCurrentTheme())\r\nlocalStorage.setItem('selected-icon', getCurrentIcon())\r\n})\r\n\r\n/*=============== SCROLL REVEAL ANIMATION ===============*/\r\nconst sr = ScrollReveal({\r\norigin: 'top',\r\ndistance: '60px',\r\nduration: 2500,\r\ndelay: 400,\r\n\r\n// reset: true // Animations repeat\r\n})\r\n\r\nsr.reveal(`.home__perfil, .about__image, .contact__mail`, {origin: 'right'})\r\nsr.reveal(`.home__name, .home__info,\r\n      .about__container .section__title-1, .about__info,\r\n      .contact__social, .contact__data`, {origin: 'left'})\r\nsr.reveal(`.services__card, .projects__card, .logos`, {interval: 100})\r\n\r\ndocument.getElementById('contact-form').addEventListener('submit', function(e) {\r\ne.preventDefault();\r\nconst form = e.target;\r\nconst data = new FormData(form);\r\n\r\nfetch(form.action, {\r\n  method: form.method,\r\n  body: data,\r\n  headers: {\r\n      'Accept': 'application/json'\r\n  }\r\n}).then(response => {\r\n  if (response.ok) {\r\n      document.getElementById('contact-message').textContent = 'Thank you for your message!';\r\n      form.reset();\r\n  } else {\r\n      response.json().then(data => {\r\n          if (Object.hasOwn(data, 'errors')) {\r\n              document.getElementById('contact-message').textContent = data.errors.map(error => error.message).join(', ');\r\n          } else {\r\n              document.getElementById('contact-message').textContent = 'Oops! There was a problem submitting your form';\r\n          }\r\n      })\r\n  }\r\n}).catch(error => {\r\n  document.getElementById('contact-message').textContent = 'Oops! There was a problem submitting your form';\r\n});\r\n});\r\n;\r\n"],"names":["navMenu","document","getElementById","navToggle","navClose","addEventListener","classList","add","remove","navLink","querySelectorAll","linkAction","forEach","n","window","header","scrollY","scrollUpElement","sections","scrollDown","current","sectionHeight","offsetHeight","sectionTop","offsetTop","sectionId","getAttribute","sectionsClass","querySelector","themeButton","darkTheme","iconTheme","selectedTheme","localStorage","getItem","selectedIcon","body","toggle","setItem","contains","sr","ScrollReveal","origin","distance","duration","delay","reveal","interval","e","preventDefault","form","target","data","FormData","fetch","action","method","headers","then","response","ok","textContent","reset","json","Object","hasOwn","errors","map","error","message","join","catch"],"sourceRoot":""}